name: Update Docker Container and Provision AWS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Passo 1: Fazer o checkout do código do repositório
    - name: Checkout repository
      uses: actions/checkout@v2

    # Passo 2: Instalar o AWS CLI (caso não esteja instalado)
    - name: Install AWS CLI
      run: |
        if ! command -v aws &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y awscli
        fi

    # Passo 3: Instalar o Docker (caso não esteja instalado)
    - name: Install Docker
      run: |
        if ! command -v docker &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y docker.io
        fi

    # Passo 4: Instalar o Terraform (caso não esteja instalado)
    - name: Install Terraform
      run: |
        if ! command -v terraform &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform
        fi

    # Passo 5: Logar no Docker Hub (opcional, caso use imagens privadas)
    - name: Log into Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Passo 6: Fazer o pull da imagem mais recente do Docker Hub
    - name: Pull latest Docker image
      run: docker pull edsoncarlos/edsoncarlos-nw-test-api:latest

    # Passo 7: Remover o contêiner antigo (caso ele esteja rodando)
    - name: Remove old container
      run: |
        if [ $(docker ps -q -f name=edsoncarlos-nw-container) ]; then
          docker stop edsoncarlos-nw-container
          docker rm edsoncarlos-nw-container
        fi

    # Passo 8: Iniciar o novo contêiner com a imagem atualizada
#    - name: Start new container
#      run: |
#        docker run -d --name edsoncarlos-nw-container -p 5000:5000 edsoncarlos/edsoncarlos-nw-test-api:latest

    # Passo 9: Configurar as credenciais da AWS
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Altere para a sua região, se necessário

    # Passo 10: Inicializar o Terraform
    - name: Initialize Terraform
      run: terraform init
      working-directory: ./infra  # Caminho para o diretório onde está o seu código Terraform

    # Passo 11: Aplicar a configuração Terraform (provisionar na AWS)
    - name: Apply Terraform
      run: terraform apply -auto-approve
      working-directory: ./infra  # Caminho para o diretório onde está o seu código Terraform

    # Passo 12: Limpeza (opcional) - Destruir a infraestrutura ao final
    # - name: Destroy infrastructure
    #   run: terraform destroy -auto-approve
    #   working-directory: ./infra  # Caminho para o diretório onde está o código Terraform